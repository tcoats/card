// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['inject', 'boid', 'unit'], function(inject, Boid, Unit) {
    var AI;
    AI = (function() {
      function AI() {
        this.register = __bind(this.register, this);
        this.step = __bind(this.step, this);
        this.setup = __bind(this.setup, this);
        this.entities = [];
        this.types = {
          boid: Boid,
          unit: Unit
        };
        inject.bind('setup', this.setup);
        inject.bind('step', this.step);
        inject.bind('register ai', this.register);
      }

      AI.prototype.setup = function() {
        return inject.one('stat notify')('istouched', (function(_this) {
          return function(entity, _, istouched) {
            if (!entity.ai) {
              return;
            }
            if (istouched) {
              return inject.one('abs stat')(entity, {
                timesincetouch: 0
              });
            } else {
              return inject.one('rel stat')(entity, {
                timesincetouch: 1
              });
            }
          };
        })(this));
      };

      AI.prototype.step = function() {
        var entity, _i, _len, _ref, _results;
        _ref = this.entities;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          entity = _ref[_i];
          _results.push(entity.step());
        }
        return _results;
      };

      AI.prototype.register = function(entity, n) {
        if (this.types[n] == null) {
          return;
        }
        entity.ai = new this.types[n](entity, n);
        return this.entities.push(entity.ai);
      };

      return AI;

    })();
    return new AI();
  });

}).call(this);
